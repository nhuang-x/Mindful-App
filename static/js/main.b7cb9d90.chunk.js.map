{"version":3,"sources":["components/MeditationPage.jsx","components/MoodJournal.jsx","components/GuidedMeditation.jsx","components/BreathingInfo.jsx","components/BreathingInfo2.jsx","components/Breathing.jsx","components/Home.jsx","components/Sleep.jsx","components/ButtonAppBar.jsx","components/footer.js","App.js","reportWebVitals.js","index.js","components/breatheinout.gif","components/The-science-of-healing-breath-infographic-683x1024.jpeg","components/square-breathing.png"],"names":["withStyles","root","backgroundColor","props","classes","Paper","className","Grid","MoodJournal","document","getElementById","value","givenPrompt","Math","floor","random","innerHTML","Card","CardHeader","style","marginBottom","title","subheader","Button","disableRipple","type","class","onClick","this","generatePromptHappy","variant","width","height","fontSize","borderRadius","marginRight","outline","border","generatePromptSad","generatePromptAngry","marginLeft","generatePromptAnxious","paddingLeft","textAlign","id","TextField","label","multiline","maxRows","rows","paddingTop","paddingBottom","submitJournal","React","Component","flexGrow","useState","setValue","value2","setValue2","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","sx","p","Typography","container","direction","xs","justify","alignItems","Tabs","TabIndicatorProps","background","onChange","event","newValue","centered","Tab","href","url","textAlignVertical","justifyContent","theme","image","resizeMode","src","info","card","CardContent","gif","alt","grid","CardMedia","component","Sleep","state","open1","open2","inputValue1","inputValue2","inputValue3","inputValue4","handleClickOpen1","setState","handleClose1","handleClickOpen2","handleClose2","plus1","valuestart1","valueend1","timeStart1","Date","timeEnd1","diff_result1","hourDiff1","getHours","minDiff1","getMinutes","valuestart2","valueend2","timeStart2","timeEnd2","diff_result2","hourDiff2","calculateTimeDifference","evt","target","header","spacer","IconButton","button1","size","aria-label","button","Dialog","open","onClose","DialogTitle","DialogContent","noValidate","defaultValue","textField","updateInputValue1","InputLabelProps","shrink","inputProps","step","updateInputValue2","DialogActions","color","button2","updateInputValue3","updateInputValue4","sleeparticle","withTheme","linkStyles","margin","textDecoration","grow","menuButton","AppBar","position","Toolbar","padding","to","ButtonGroup","link","exact","path","Home","GuidedMeditation","Breathing","Footer","styles","overflow","flex","undefined","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.b7cb9d90.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Paper, Grid} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n \nconst styles = {\n  root: {\n    backgroundColor:\"red !important\",\n  },\n};\n\nfunction MeditationPage(props) {\n  const { classes } = props;\n  return (\n    <Paper className={classes.root}>\n        <Grid>\n        </Grid>\n    </Paper>\n  );\n}\n\nMeditationPage.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MeditationPage);","import React, { Component } from 'react'\nimport {Button, TextField} from '@material-ui/core'\nimport {Card, CardContent, CardHeader,Grid} from '@material-ui/core'\n\nclass MoodJournal extends React.Component {\n    submitJournal(){\n        document.getElementById(\"journal-prompt\").value =\"\";\n    }\n\n    generatePromptHappy(){\n        const happyPrompts = [\"What are five things you are grateful for?\",\n                              \"What is something you are looking forward to?\",\n                              \"What is something you are proud of?\",\n                              \"What is a way that you can bring your happiness to others?\"];\n        var givenPrompt=happyPrompts[Math.floor(Math.random()*4)];\n        document.getElementById(\"givenPrompt\").innerHTML = givenPrompt;\n    }\n\n    generatePromptSad(){\n        const sadPrompts = [\"What is a goal you are working towards?\",\n                              \"Write about the happiest time in your life.\",\n                              \"When is the last time you did something nice for yourself?\",\n                              \"What is one way you can reward yourself when you accomplish something?\"];\n        var givenPrompt=sadPrompts[Math.floor(Math.random()*4)];\n        document.getElementById(\"givenPrompt\").innerHTML = givenPrompt;\n    }\n\n    generatePromptAngry(){\n        const angryPrompts = [\"Use this as a space to vent!\",\n                              \"What were you feeling or doing just before you felt angry?\",\n                              \"If I could have a do-over, I would...\",\n                              \"What is your anger trying to tell you about yourself?\"];\n        var givenPrompt=angryPrompts[Math.floor(Math.random()*4)];\n        document.getElementById(\"givenPrompt\").innerHTML = givenPrompt;\n    }\n\n    generatePromptAnxious(){\n        const anxiousPrompts = [\"What is something you need to let go of?\",\n                              \"What are three things that scare you and why?\",\n                              \"Write a list of the worries that you want to get rid of.\",\n                              \"What are some self-care ideas for when you are feeling overwhelmed?\"];\n        var givenPrompt=anxiousPrompts[Math.floor(Math.random()*4)];\n        document.getElementById(\"givenPrompt\").innerHTML = givenPrompt;\n    }\n\n    generatePromptStressed(){\n        const stressedPrompts = [\"What are things that define you outside of school/work/accomplishments?\",\n                              \"What is something you are proud of that is not on your resume?\",\n                              \"What past challenge turned out to serve you? What was the silver lining?\",\n                              \"What can you do in this moment to bring more peace into your being?\"];\n        var givenPrompt=stressedPrompts[Math.floor(Math.random()*4)];\n        document.getElementById(\"givenPrompt\").innerHTML = givenPrompt;\n    }\n\n    generatePromptLost(){\n        const lostPrompts = [\"What emotions are you feeling right now? Why?\",\n                              \"How can you re-prioritize your to-do list?\",\n                              \"Where do you feel out of alignment with the things that bring you joy?\",\n                              \"What is a short-term goal you are confident that you can achieve?\"];\n        var givenPrompt=lostPrompts[Math.floor(Math.random()*4)];\n        document.getElementById(\"givenPrompt\").innerHTML = givenPrompt;\n    }\n\n    render() { \n        const mystyle = {\n            paddingLeft: \"13%\",\n            textAlign: \"left\" };\n        return <div>\n                    <Card>\n                    <CardHeader\n                    style={{backgroundColor:\"#e4e9e2\",\n                            marginBottom: '2%'}}\n                    title=\"How are you feeling today?\"\n                    subheader=\"Make sure to fill out your mood journal everyday to keep in touch with your feelings and to keep your plant healthy and strong!\"\n                    />\n                \n                    <div>\n                        <Button \n                        disableRipple = \"true\"\n                        type = \"mood\" \n                        class = \"happyMood\" \n                        onClick={this.generatePromptHappy}\n                        variant=\"contained\"\n                        style = {{backgroundColor: \"#cccfbd\",\n                                width: 200,\n                                height: 80,\n                                fontSize: 15,\n                                borderRadius:15,\n                                marginRight: '10px',\n                                marginBottom: '10px',\n                                outline: 'none',\n                                border:'none'}}>\n                            HAPPY\n                        </Button> \n\n                        <Button \n                        disableRipple = \"true\"\n                        type = \"mood\" \n                        class = \"sadMood\" \n                        onClick={this.generatePromptSad}\n                        variant=\"contained\"\n                        style = {{backgroundColor: \"#c1c5af\",\n                                width: 200,\n                                height: 80,\n                                fontSize: 15,\n                                borderRadius:15,\n                                marginBottom: '10px',\n                                outline: 'none',\n                                border:'none'}}>\n                            SAD\n                        </Button> \n\n                        <Button \n                        disableRipple = \"true\"\n                        type = \"mood\" \n                        class = \"angryMood\" \n                        onClick={this.generatePromptAngry}\n                        variant=\"contained\"\n                        style = {{backgroundColor:\"#adb295\",\n                                    width: 200,\n                                    height: 80,\n                                    fontSize: 15,\n                                    borderRadius:15,\n                                    marginLeft: '10px',\n                                    marginBottom: '10px',\n                                    outline: 'none',\n                                    border:'none'}}>\n                            ANGRY\n                        </Button> \n                        </div>\n\n                        <div>\n                        <Button \n                        disableRipple = \"true\"\n                        type = \"mood\" \n                        class = \"anxiousMood\" \n                        onClick={this.generatePromptAnxious}\n                        variant=\"contained\"\n                        style = {{backgroundColor:\"#b7bca2\",\n                                    width: 200,\n                                    height: 80,\n                                    fontSize: 15,\n                                    borderRadius:15,\n                                    marginRight: '10px',\n                                    marginBottom: '10px',\n                                    outline: 'none',\n                                    border:'none'\n                                    }}>\n                            ANXIOUS\n                        </Button> \n\n                        <Button \n                        disableRipple = \"true\"\n                        type = \"mood\" \n                        class = \"stressedMood\" \n                        onClick={this.generatePromptAnxious}\n                        variant=\"contained\"\n                        style = {{backgroundColor:\"#a2a987\",\n                                    width: 200,\n                                    height: 80,\n                                    fontSize:15,\n                                    borderRadius:15,\n                                    marginBottom: '10px',\n                                    outline: 'none',\n                                    border:'none'}}>\n                            STRESSED\n                        </Button> \n\n                        <Button \n                        disableRipple = \"true\"\n                        type = \"mood\" \n                        class = \"lostMood\" \n                        onClick={this.generatePromptAnxious}\n                        variant=\"contained\"\n                        style = {{backgroundColor:\"#989f7a\",\n                                    width: 200,\n                                    height: 80,\n                                    fontSize: 15,\n                                    borderRadius:15,\n                                    marginLeft: '10px',\n                                    marginBottom: '10px',\n                                    outline: 'none',\n                                    border:'none'}}>\n                            LOST\n                        </Button> \n                    </div>\n                    <h4 style={mystyle}>\n                        <span id=\"givenPrompt\"></span>\n                    </h4>  \n                    \n                    <TextField\n                    id=\"journal-prompt\" \n                    label=\"Write here!\" \n                    variant=\"outlined\"\n                    multiline\n                    maxRows={10}\n                    rows={10}\n                    style={{width: '75%'}}>\n                    </TextField>\n\n                    <div style = {{paddingTop:20, paddingBottom:20}}>\n                    <Button  \n                    onClick={this.submitJournal}\n                    variant=\"contained\"\n                    style = {{backgroundColor:\"#B6A9B6\",\n                                width: 175,\n                                height: 40,\n                                fontSize: 12,\n                                borderRadius:10,}}>\n                        WATER YOUR PLANT\n                    </Button>\n                    </div>\n                    </Card>\n                </div>;\n            \n    }\n}\n \nexport default MoodJournal;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport {Tabs,Tab,AppBar,Toolbar, Typography, Button, IconButton, Card,CardHeader,Grid } from '@material-ui/core';\nimport { Rowing } from '@material-ui/icons';\nimport ReactPlayer from \"react-player\";\nimport Box from \"@material-ui/core/Box\";\n\n \n \nconst styles = {\n root: {\n   flexGrow: 1,\n   \n },\n\n };\n \n    \n \n \nfunction Meditation(props) {\n\n        \n    \n    const [value, setValue] = React.useState(0);\n\n    const [value2, setValue2] = React.useState(0);\n    \n  \n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n\n    const handleChange2 = (event, newValue) => {\n        setValue2(newValue);\n      };\n\n    function TabPanel(props) {\n        const { children, value, index, ...other } = props;\n      \n        return (\n          <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n          >\n            {value === index && (\n              <Box sx={{ p: 3 }}>\n                <Typography>{children}</Typography>\n              </Box>\n            )}\n          </div>\n        );\n      }\n      \n\n const { classes } = props;\n return (\n <div className={classes.root}>\n    <Card variant = \"outlined\">\n                <CardHeader\n                style = {{backgroundColor: \"#e4e9e2\"}}\n                    title=\"Guided Meditation and Yoga\"\n                    subheader=\"Take a moment to recenter yourself.\"\n                /> \n                \n                <Grid container>\n\n                <Grid direction='row' xs justify=\"center\" alignItems=\"center\">\n                  \n                    <h4>Guided Meditation Videos </h4>\n                   \n                    <Tabs TabIndicatorProps={{style:{background:'#7D9AAA'}}} value={value} onChange={handleChange} centered>\n                        <Tab label=\"Meditation Video 1\" />\n                        <Tab label=\"Meditation Video 2\" />\n                        <Tab label=\"Meditation Video 3\"/>\n                    </Tabs>\n                    <TabPanel value={value} index={0}>\n                    <div>\n                        <h3>10-Minute Meditation for Anxiety - <a href=\"https://www.youtube.com/channel/UCEMArgthHuEtX-04qL_8puQ\">Goodful</a></h3>\n                        <div>\n                        <ReactPlayer\n                        url=\n                        \"https://www.youtube.com/watch?v=O-6f5wQXSu8&ab_channel=Goodful\"\n                        width=\"100%\"\n                        textAlignVertical =\"center\"\n                        \n                        />\n                        </div>\n                    </div>\n                    </TabPanel>\n                    <TabPanel value={value} index={1}>\n                    <div>\n                        <h3>Morning Positive Affirmations - <a href=\"https://www.youtube.com/channel/UCN4vyryy6O4GlIXcXTIuZQQ\">Great Meditation</a></h3>\n                        <div>\n                        <ReactPlayer\n                        url=\n                        \"https://www.youtube.com/watch?v=2l8WD4U4KMk&ab_channel=GreatMeditation\"\n                        width=\"100%\"\n                        textAlignVertical =\"center\"\n                        \n                        />\n                        </div>\n                    </div>\n                    </TabPanel>\n                    <TabPanel value={value} index={2}>\n                    <div>\n                        <h3>Rainstorm Sounds for Relaxing, Focus, or Deep Sleep - <a href=\"https://www.youtube.com/channel/UChSpME3QaSFAWK8Hpmg-Dyw\">Calm</a></h3>\n                        <div>\n                        <ReactPlayer\n                        url=\n                        \"https://www.youtube.com/watch?v=yIQd2Ya0Ziw&ab_channel=Calm\"\n                        width=\"100%\"\n                        textAlignVertical =\"center\"\n                        \n                        />\n                        </div>\n                    </div>\n                    </TabPanel>\n                    </Grid>\n\n                    <Grid direction='row' xs justifyContent=\"center\"alignItems=\"center\">\n                      \n                    <h4>Guided Yoga Videos</h4>\n                    \n                    <Tabs TabIndicatorProps={{style:{background:'#7D9AAA'}}} value={value2} onChange={handleChange2} centered>\n                        <Tab label=\"Yoga Video 1\" />\n                        <Tab label=\"Yoga Video 2\" />\n                        <Tab label=\"Yoga Video 3\"/>\n                    </Tabs>\n                    <TabPanel value={value2} index={0}>\n                    <div>\n                        <h3>Peaceful Warrior Yoga - <a href=\"https://www.youtube.com/channel/UC-0CzRZeML8zw4pFTVDq65Q\">SarahBethYoga</a></h3>\n                        <div>\n                        <ReactPlayer\n                        url=\n                        \"https://www.youtube.com/watch?v=Nw2oBIrQGLo&ab_channel=SarahBethYoga\"                        \n                        width=\"100%\"\n                        textAlignVertical =\"center\"\n                        \n                        />\n                        </div>\n                    </div>\n                    </TabPanel>\n                    <TabPanel value={value2} index={1}>\n                    <div>\n                        <h3>20 Minute Full Body Yoga for Stress and Anxiety Relief - <a href=\"https://www.youtube.com/channel/UCpQ34afVgk8cRQBjSJ1xuJQ\">MadFit</a></h3>\n                        <div>\n                        <ReactPlayer\n                        url=\n                        \"https://www.youtube.com/watch?v=sTANio_2E0Q&ab_channel=MadFit\"\n                        width=\"100%\"\n                        textAlignVertical =\"center\"\n                        \n                        />\n                        </div>\n                    </div>\n                    </TabPanel>\n                    <TabPanel value={value2} index={2}>\n                    <div>\n                        <h3>Bedtime Yoga Stretch to Release Tension and Stress - <a href=\"https://www.youtube.com/channel/UCxYVPua6HC46HzgT8IIn3vg\">Yoga with Bird</a></h3>\n                        <div>\n                        <ReactPlayer\n                        className='react-player'\n                        url=\n                        \"https://www.youtube.com/watch?v=4TQsfBYCyKQ&ab_channel=YogaWithBird\"\n                        width=\"100%\"\n                        textAlignVertical =\"center\"\n                      \n                        \n                        />\n                        </div>\n                    </div>\n                    </TabPanel>\n                    \n                    </Grid>\n                    \n\n                </Grid>\n    </Card>\n\n \n    </div>\n\n  );\n }\n  \n Meditation.propTypes = {\n  classes: PropTypes.object.isRequired,\n };\n  \n export default withStyles(styles)(Meditation);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport info from './The-science-of-healing-breath-infographic-683x1024.jpeg'\n\nconst styles = theme => ({\n    image: {\n        width: '60%',\n        height: '60%',\n        resizeMode: 'cover'\n    }\n  });\n  \n  function BreathingInfo (props) {\n    const { classes } = props;\n  \n    return (\n      <div className={classes.root}>\n        <img src={info} className={classes.image}/>\n      </div>\n    );\n  }\n  \n  BreathingInfo.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(BreathingInfo);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport info from './square-breathing.png'\n\nconst styles = theme => ({\n    image: {\n        width: '60%',\n        height: '60%',\n        resizeMode: 'cover'\n    }\n  });\n  \n  function BreathingInfo2 (props) {\n    const { classes } = props;\n  \n    return (\n      <div className={classes.root}>\n        <img src={info} className={classes.image}/>\n      </div>\n    );\n  }\n  \n  BreathingInfo2.propTypes = {\n    classes: PropTypes.object.isRequired,\n  };\n  \n  export default withStyles(styles)(BreathingInfo2);","import React, { Component } from 'react'\nimport gif from './breatheinout.gif'\nimport {Card, CardContent, CardHeader,Grid} from '@material-ui/core'\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport BreathingInfo from './BreathingInfo';\nimport BreathingInfo2 from './BreathingInfo2';\n\nconst styles = {\n  card: {\n  },\n  \n};\n\n\nfunction Breathing(props) {\n    const {classes} = props;\n    return (\n        <div>\n            <Card className={classes.card}>\n                <CardHeader\n                    style={{backgroundColor: \"#e4e9e2\"}}\n                    title=\"Breathing Exercise\"\n                    subheader=\"Every system in the body relies on oxygen.\"\n                    \n                />\n                \n                <CardContent style={{paddingTop: \"2%\"}}>\n                    <Grid container >\n                        <Grid direction=\"row\" xs>\n                        <BreathingInfo2></BreathingInfo2>\n                            </Grid>\n                        <Grid direction=\"row\" xs={2.5}>\n                        <p>Follow the Blue Circle.</p>\n                        <p>Breathe in while the circle expands.</p>\n                        <p>Breathe out while the circle shrinks.</p>\n                           <img src={gif} alt=\"Loading...\" />\n                        </Grid>\n                        <Grid direction=\"row\" xs>\n                            <BreathingInfo></BreathingInfo>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n\n                \n            </Card>\n        </div>\n    )\n}\n\nBreathing.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Breathing);","import React, { Component } from 'react'\nimport { Card, CardMedia } from '@material-ui/core'\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  card: {\n  },\n};\n\nfunction Home(props) {\n    const {classes} = props;\n    return (\n        <Card className={classes.grid}>\n            <CardMedia \n                className = {classes.image} \n                component=\"img\"\n                height=\"100%\"\n                image = \"https://www.teachermagazine.com/assets/images/teacher/_1200x630_crop_center-center_82_none/The-basics-of-mindfulness_1398166040.jpg?mtime=1611095601\"/>\n        </Card>\n    )\n}\n\nHome.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Home);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Typography, Button, IconButton, Card, CardHeader} from '@material-ui/core';\nimport { CardContent, Grid } from '@mui/material';\nimport SunIcon from '@mui/icons-material/WbSunny';\nimport MoonIcon from '@mui/icons-material/ModeNight';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  card:{\n    height:\"500%\",\n  },\n  grid:{\n    height: 250,\n  },\n  spacer:{\n      height:10\n  },\n  header:{\n      backgroundColor: \"#e4e9e2\"\n  },\n  button: {\n    color: \"black\",\n    width: \"100\",\n    height:\"500\",\n    fontSize:\"500\"\n  },\n  button1:{\n    color: \"FEFEBE\",\n    backgroundColor: \"#FEFEBE\",\n    borderRadius: 0,\n    width: \"100%\",\n    height:\"100%\",\n  },\n  button2:{\n    color: \"E9D3FF\",\n    backgroundColor: \"#E9D3FF\",\n    borderRadius: 0,\n    width: \"100%\",\n    height:\"100%\",\n  }\n  \n});\n\nclass Sleep extends React.Component {\n    state = {\n      open1: false,\n      open2:false,\n      inputValue1: \"12:00\",\n      inputValue2: \"12:00\",\n      inputValue3: \"00:00\",\n      inputValue4: \"00:00\",\n    };\n    calculateTimeDifference(){\n        var plus1 = 0;\n        var valuestart1 = this.state.inputValue1;\n        var valueend1= this.state.inputValue2;\n\n        var timeStart1 = new Date(\"01/01/2021 \" + valuestart1);\n        var timeEnd1 = new Date(\"01/01/2021 \" + valueend1);\n\n        var difference1 = timeEnd1 - timeStart1;             \n        var diff_result1 = new Date(difference1);   \n\n        var hourDiff1 = diff_result1.getHours();\n        var minDiff1 = diff_result1.getMinutes();\n\n        var valuestart2 = this.state.inputValue3;\n        var valueend2= this.state.inputValue4;\n\n        var timeStart2 = new Date(\"01/01/2021 \" + valuestart2);\n        var timeEnd2 = new Date(\"01/01/2021 \" + valueend2);\n\n        var difference2 = timeEnd2 - timeStart2;             \n        var diff_result2 = new Date(difference2);   \n\n        var hourDiff2 = diff_result2.getHours();\n        var minDiff2 = diff_result2.getMinutes();\n\n        if(minDiff1 + minDiff2 >= 60)\n        {\n            plus1 = 1;\n        }\n        return (hourDiff1 + 5)% 24 + (hourDiff2 + 5)% 24 + plus1\n    };\n\n    sleepquestion(){\n        if(this.calculateTimeDifference() >= 8)\n        {\n            return \"yes\";\n        }\n        else{\n            return \"NO. SLEEP MORE\";\n        }\n    }\n\n    sleeparticle(){\n        if(this.calculateTimeDifference() >= 8)\n        {\n            return <div>\n                <Card style={{background: \"#c9f1c9\"}}>\n                <CardHeader\n            title=\"Nice! You got enough sleep! By getting enough sleep, you will probably:\"\n            />\n            <CardContent>\n            <Typography> - Get sick less often </Typography>\n            <Typography> - Stay at a healthy weight</Typography>\n            <Typography> - Lower your risk for serious health problems, like diabetes and heart disease  </Typography>\n            <Typography> - Experience more satisfaction in interpersonal relationships </Typography>\n            <Typography> - Reduce stress and improve your mood </Typography>\n            <Typography> - Think more clearly and do better in school and at work </Typography>\n            <Typography> - Make good decisions and avoid injuries — for example, drowsy drivers cause thousands of car accidents every year </Typography> \n            </CardContent>\n            </Card>             \n                </div>\n                    \n        }\n        else{\n            return <div>\n                <Card style={{background: \"#FFA9A9\"}}>\n                <CardHeader\n            title=\"You did not get enough sleep. By sleeping too little, you are more likely to experience: \"\n            />\n            <CardContent>\n                <Typography> - Excessive daytime sleepiness. It can make you very sleepy and tired during the day. </Typography>\n                <Typography> - Lack of alertness. Even missing as little as 1.5 hours can have an impact on how you feel. </Typography>\n                <Typography> - Impaired memory. Lack of sleep can affect your ability to think, remember and process information.</Typography>\n                <Typography> - Relationship stress. It can make you feel moody and you can become more likely to have conflicts with others. </Typography>\n                <Typography> - Poor quality of life. You may become less likely to participate in normal daily activities or to exercise.</Typography>\n                <Typography> - Greater likelihood for car accidents. Drowsy driving accounts for thousands of crashes, injuries and fatalities each year</Typography>\n            </CardContent>\n            </Card>\n            </div>\n\n\n        }\n    }\n  \n    handleClickOpen1 = () => {\n      this.setState({ open1: true });\n    };\n  \n    handleClose1 = () => {\n      this.setState({ open1: false });\n    };\n\n    handleClickOpen2 = () => {\n        this.setState({ open2: true });\n      };\n    \n      handleClose2 = () => {\n        this.setState({ open2: false });\n      };\n\n      updateInputValue1(evt) {\n        this.setState({\n          inputValue1: evt.target.value\n        });\n      }\n      updateInputValue2(evt) {\n        this.setState({\n          inputValue2: evt.target.value\n        });\n      }\n      updateInputValue3(evt) {\n        this.setState({\n          inputValue3: evt.target.value\n        });\n      }\n      updateInputValue4(evt) {\n        this.setState({\n          inputValue4: evt.target.value\n        });\n      }\n  \n    render() {\n    const { classes, theme } = this.props;\n      return (\n        <div className={classes.root}>\n        <Card className={classes.card}>\n            <CardHeader\n            title=\"Sleep Tracker\"\n            subheader=\"Log your sleep to build healthy habits.\"\n            className={classes.header}\n            />\n            <CardContent className={classes.card}>\n                <Grid container>\n                    <Grid direction=\"row\" xs>\n                      <h3>\n                        Daytime Sleep\n                        </h3>\n                    </Grid>\n                    <Grid direction=\"row\" xs>\n                      <h3>\n                        Nighttime Sleep\n                        </h3>\n                    </Grid>\n                </Grid>\n                <Grid container className={classes.spacer}>\n                    </Grid>\n                <Grid container className={classes.grid}>\n                    <Grid direction=\"row\" xs>\n                        <IconButton className={classes.button1} size=\"large\" aria-label=\"WbSunny\" onClick={this.handleClickOpen1}>\n                            <SunIcon className={classes.button} fontSize=\"large\"/>\n                        </IconButton>\n\n                        <Dialog\n            open={this.state.open1}\n            onClose={this.handleClose1}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"form-dialog-title\">Sleep Tracker</DialogTitle>\n            <DialogContent>\n              <form className={classes.container} noValidate>\n                <TextField\n                    id=\"time\"\n                    label=\"Start Sleep:\"\n                    type=\"time\"\n                    defaultValue=\"12:00\"\n                    className={classes.textField}\n                    value={this.state.inputValue1}\n                    onChange={evt => this.updateInputValue1(evt)}\n                    InputLabelProps={{\n                    shrink: true,\n                    }}\n                    inputProps={{\n                    step: 300, // 5 min\n                    }}\n                />\n                </form>\n            <form className={classes.container} noValidate>\n            <TextField\n                id=\"time\"\n                label=\"End Sleep:\"\n                type=\"time\"\n                defaultValue=\"20:00\"\n                className={classes.textField}\n                value={this.state.inputValue2}\n                onChange={evt => this.updateInputValue2(evt)}\n                InputLabelProps={{\n                shrink: true,\n                }}\n                inputProps={{\n                step: 300, // 5 min\n                }}\n            />\n            </form>\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={this.handleClose1} color=\"primary\">\n                Done\n              </Button>\n              <Button onClick={this.handleClose1} color=\"primary\">\n                Cancel\n              </Button>\n            </DialogActions>\n          </Dialog>\n\n                    </Grid>\n                    <Grid direction=\"row\" xs>\n                        <IconButton className={classes.button2} size=\"large\" aria-label=\"ModeNight\" onClick={this.handleClickOpen2}>\n                            <MoonIcon className={classes.button} fontSize=\"large\"/>\n                        </IconButton >\n                        <Dialog\n            open={this.state.open2}\n            onClose={this.handleClose2}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"form-dialog-title\">Sleep Tracker</DialogTitle>\n            <DialogContent>\n              <form className={classes.container} noValidate>\n                <TextField\n                    id=\"time\"\n                    label=\"Start Sleep:\"\n                    type=\"time\"\n                    defaultValue=\"00:00\"\n                    className={classes.textField}\n                    value={this.state.inputValue3}\n                    onChange={evt => this.updateInputValue3(evt)}\n                    InputLabelProps={{\n                    shrink: true,\n                    }}\n                    inputProps={{\n                    step: 300, // 5 min\n                    }}\n                />\n                </form>\n            <form className={classes.container} noValidate>\n            <TextField\n                id=\"time\"\n                label=\"End Sleep:\"\n                type=\"time\"\n                defaultValue=\"08:00\"\n                value={this.state.inputValue4}\n                onChange={evt => this.updateInputValue4(evt)}\n                className={classes.textField}\n                InputLabelProps={{\n                shrink: true,\n                }}\n                inputProps={{\n                step: 300, // 5 min\n                }}\n            />\n            </form>\n            </DialogContent>\n            <DialogActions>\n            <Button onClick={this.handleClose2} color=\"primary\">\n                Done\n              </Button>\n              <Button onClick={this.handleClose2} color=\"primary\">\n                Cancel\n              </Button>\n\n            </DialogActions>\n          </Dialog>\n                    </Grid>\n                </Grid>\n                <Grid container className={classes.spacer}>\n                </Grid>\n                <Grid container>\n                    <Grid direction=\"row\" xs>\n                      <h3>\n                        Total Hours: {this.calculateTimeDifference()}\n                        </h3>\n                    </Grid>\n                </Grid>\n                <Grid container style={{background: \"#e4e9e2\", height: 50, paddingTop: \"1%\"}}>\n                    <Grid direction=\"row\" xs >\n                            You have slept a total of {this.calculateTimeDifference()} hours within the last 24 hours.\n                        </Grid>\n                </Grid>\n\n                <Grid container className={classes.spacer}>\n                </Grid>\n                <Grid container xs >\n                    <Grid direction=\"row\" xs>\n                      <h3 style={{paddingBottom:'5px'}}>\n                        Did you get enough sleep?\n                      </h3>\n                      <h3>\n                        {this.sleeparticle()}\n                      </h3>\n                    </Grid>\n                </Grid>\n            </CardContent>\n\n        </Card>\n        </div>\n      );\n    }\n  }\n\n  Sleep.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n  };\n\n  export default withStyles(styles, { withTheme: true })(Sleep)","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Typography, Button, IconButton, ButtonGroup, Card, CardMedia } from '@material-ui/core';\nimport GuidedMeditation from './GuidedMeditation'\nimport MoodJournal from './MoodJournal'\nimport Breathing from './Breathing'\nimport Home from './Home'\nimport GrassIcon from '@mui/icons-material/Grass';\nimport Sleep from './Sleep'\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  \n};\n\nconst linkStyles = {\n  margin: \"3rem\",\n  textAlign: \"center\",\n  textDecoration: \"none\",\n  color: 'white'\n};\n\nfunction ButtonAppBar(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <Router>\n          <AppBar position=\"static\" style={{ backgroundColor: \"#5F7A6B\" }}>\n            <Toolbar>\n              <GrassIcon fontSize=\"large\" style={{padding:'-10%'}}/>\n              <Typography variant=\"h5\" color=\"inherit\">\n                <Link style = {linkStyles} to=\"/\">Mindful Garden</Link>\n              </Typography>\n              <ButtonGroup variant=\"text\" aria-label=\"outlined button group\">\n              <Button color=\"inherit\">\n                <Typography className={classes.link}>\n                  <Link style = {linkStyles} to=\"/meditation\">Meditate</Link>\n                </Typography>\n              </Button>\n              <Button color=\"inherit\">\n                <Typography className={classes.link}>\n                  <Link style = {linkStyles} to=\"/mood-journal\">Journal</Link>\n                </Typography>\n              </Button>\n              <Button color=\"inherit\">\n                <Typography className={classes.link}>\n                  <Link style = {linkStyles} to=\"/breathe\">Breathe</Link>\n                </Typography>\n              </Button>\n             \n              <Button color=\"inherit\">\n                <Typography className={classes.link}>\n                  <Link style = {linkStyles} to=\"/sleeptracker\">Sleep</Link>\n                </Typography>\n              </Button>\n\n              </ButtonGroup>\n            </Toolbar>\n          </AppBar>\n\n          <Route exact={true} path=\"/\" component={Home} />\n          <Route path=\"/meditation\" component={GuidedMeditation} />\n          <Route path=\"/breathe\" component={Breathing} />\n          <Route path=\"/mood-journal\" component={MoodJournal} />\n          <Route path=\"/sleeptracker\" component={Sleep} />\n      </Router>\n    </div>\n  );  \n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ButtonAppBar);\n","import React from \"react\";\n\nconst Footer = () => (\n  <div className=\"footer\">\n    <p style = {{color:\"white\"}}>Developed by Duke University students for HackDuke 2021.</p>\n  </div>\n);\n\nexport default Footer;","import React, { Component } from 'react'\nimport './App.css';\nimport MeditationPage from './components/MeditationPage'\nimport MoodJournal from './components/MoodJournal'\nimport ButtonAppBar from './components/ButtonAppBar'\nimport Breathing from './components/Breathing'\nimport Footer from './components/footer'\nimport { Card, CardMedia } from '@material-ui/core'\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n \nconst styles = {\n  root: {\n    backgroundColor:\"red !important\",\n  },\n  grid: {\n    resizeMode:'contain',\n    height:'100%',\n    width:'100%',\n    overflow:'hidden'\n  },\n  image: {\n    flex: 1,\n    resizeMode: 'cover',\n    height: undefined,\n    width: undefined\n  }\n};\n\nfunction App(props) {\n  const { classes } = props;\n  return (\n    <div className=\"App\">\n        <ButtonAppBar/>\n        <Footer/>\n\n    </div>\n );\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/breatheinout.84e644e3.gif\";","module.exports = __webpack_public_path__ + \"static/media/The-science-of-healing-breath-infographic-683x1024.2121bffe.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/square-breathing.29724496.png\";"],"sourceRoot":""}